let marked=window.marked,DOMPurify=window.DOMPurify,Prism=window.Prism;export const URLs={marked:"https://cdn.jsdelivr.net/npm/marked/src/marked.min.js",DOMPurify:"https://cdn.jsdelivr.net/npm/dompurify@2.3.3/dist/purify.es.min.js"};function deIndent(e){let t=e.match(/^[\r\n]*([\t ]+)/);return t&&(t=t[1],e=e.replace(RegExp("^"+t,"gm"),"")),e}export class MarkdownElement extends HTMLElement{constructor(){for(let e in super(),this.renderer=Object.assign({},this.constructor.renderer),this.renderer)this.renderer[e]=this.renderer[e].bind(this)}get rendered(){return this.getAttribute("rendered")}get mdContent(){return this._mdContent}set mdContent(e){this._mdContent=e,this._contentFromHTML=!1,this.render()}connectedCallback(){Object.defineProperty(this,"untrusted",{value:this.hasAttribute("untrusted"),enumerable:!0,configurable:!1,writable:!1}),void 0===this._mdContent&&(this._contentFromHTML=!0,this._mdContent=deIndent(this.innerHTML),this._mdContent=this._mdContent.replace(/&gt;/g,">")),this.render()}async render(){if(!this.isConnected||void 0===this._mdContent)return;marked||(marked=import(URLs.marked).then(e=>e.marked)),(marked=await marked).setOptions({gfm:!0,smartypants:!0,langPrefix:"language-"}),marked.use({renderer:this.renderer});let e=this._parse();if(this.untrusted){let t=this._mdContent;if(e=await MarkdownElement.sanitize(e),this._mdContent!==t)return}if(this.innerHTML=e,!Prism&&URLs.Prism&&this.querySelector("code")&&(Prism=import(URLs.Prism),URLs.PrismCSS)){let r=document.createElement("link");r.rel="stylesheet",r.href=URLs.PrismCSS,document.head.appendChild(r)}Prism&&(await Prism,Prism.highlightAllUnder(this)),this.src?this.setAttribute("rendered",this._contentFromHTML?"fallback":"remote"):this.setAttribute("rendered",this._contentFromHTML?"content":"property");let n=new CustomEvent("md-render",{bubbles:!0,composed:!0});this.dispatchEvent(n)}static async sanitize(e){return DOMPurify||(DOMPurify=import(URLs.DOMPurify).then(e=>e.default)),(DOMPurify=await DOMPurify).sanitize(e)}}export class MarkdownSpan extends MarkdownElement{constructor(){super()}_parse(){return marked.parseInline(this._mdContent)}static renderer={codespan(e){return`<code>${e=this._contentFromHTML?e.replace(/&amp;(?=[lg]t;)/g,"&"):e.replace(/</g,"&lt;")}</code>`}}}export class MarkdownBlock extends MarkdownElement{constructor(){super()}get src(){return this._src}set src(e){this.setAttribute("src",e)}get hmin(){return this._hmin||1}set hmin(e){this.setAttribute("hmin",e)}get hlinks(){return this._hlinks??null}set hlinks(e){this.setAttribute("hlinks",e)}_parse(){return marked.parse(this._mdContent)}static renderer=Object.assign({heading(e,t,r,n){t=Math.min(6,t+(this.hmin-1));let s=n.slug(e),i=this.hlinks,d;return null===i?d=e:(d=`<a href="#${s}" class="anchor">`,""===i?d+=e+"</a>":d+=i+"</a>"+e),`
<h${t} id="${s}">
	${d}
</h${t}>`},code(e,t,r){return`<pre class="language-${t}"><code>${e=this._contentFromHTML?e.replace(/&amp;(?=[lg]t;)/g,"&"):e.replace(/</g,"&lt;")}</code></pre>`}},MarkdownSpan.renderer);static get observedAttributes(){return["src","hmin","hlinks"]}attributeChangedCallback(e,t,r){if(t!==r)switch(e){case"src":let n;try{n=new URL(r,location)}catch(s){return}let i=this.src;this._src=n,this.src!==i&&fetch(this.src).then(e=>{if(!e.ok)throw Error(`Failed to fetch ${this.src}: ${e.status} ${e.statusText}`);return e.text()}).then(e=>{this.mdContent=e}).catch(e=>{});break;case"hmin":r>0&&(this._hmin=+r,this.render());break;case"hlinks":this._hlinks=r,this.render()}}}customElements.define("md-block",MarkdownBlock),customElements.define("md-span",MarkdownSpan);